#!/usr/bin/env python3

import sys
import shlex
from urllib.parse import urlparse
from asyncio import create_subprocess_exec, coroutine, subprocess, get_event_loop


if len(sys.argv) != 2: 
	print("Usage: ghclone HTTPS_link")
	exit(1)


def getGHSSH(git_https):
	if len(shlex.split(git_https)) > 1:
		print("Errornous link!")
		exit(10)
	git_link = urlparse(git_https)
	git_host = git_link.netloc
	git_path = git_link.path.split("/")
	git_path = list(filter(None, git_path))
	
	git_user = git_path[0]
	git_repo = git_path[1]

	return "git@{}:{}/{}.git".format(git_host, git_user, git_repo)


@coroutine
def cloneRepo(git_ssh):
	proc = yield from create_subprocess_exec(*["git", "clone", shlex.quote(git_ssh)],
		stdout=subprocess.PIPE, stderr=subprocess.STDOUT, shell=False)

	stdout, _ = yield from proc.communicate()
	stdout = stdout.decode("utf-8").split("\n")
	stdout = filter(None, stdout)
	
	for line in stdout:
		print("git: {}".format(line))


if __name__ == "__main__":
	gh_ssh = getGHSSH(sys.argv[1])
	print("ghclone: Generated ssh: {}".format(gh_ssh))
	
	loop = get_event_loop()
	loop.run_until_complete(cloneRepo(gh_ssh))
	loop.close()
